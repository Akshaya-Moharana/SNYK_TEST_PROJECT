'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace com.crawco.cdsws
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CDSWSSoap", [Namespace]:="http://Crawco.com/CDS/")>  _
    Partial Public Class CDSWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private DBRROperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryDomainAliasNamesVTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryDomainAliasNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainNameVTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainPathVTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDomainPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerifyConnectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private authHeaderValueField As AuthHeader
        
        Private DirectoryUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateMembershipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ManifestVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CDSServiceCall.My.MySettings.Default.CDSServiceCall_com_crawco_cdsws_CDSWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property AuthHeaderValue() As AuthHeader
            Get
                Return Me.authHeaderValueField
            End Get
            Set
                Me.authHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event DBRRCompleted As DBRRCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryDomainAliasNamesVTCompleted As QueryDomainAliasNamesVTCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryDomainAliasNamesCompleted As QueryDomainAliasNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainNameVTCompleted As GetDomainNameVTCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainNameCompleted As GetDomainNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainPathVTCompleted As GetDomainPathVTCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDomainPathCompleted As GetDomainPathCompletedEventHandler
        
        '''<remarks/>
        Public Event VerifyConnectionCompleted As VerifyConnectionCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateCompleted As AuthenticateCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchCompleted As SearchCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryGroupListCompleted As QueryGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event DirectoryUpdateCompleted As DirectoryUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateMembershipCompleted As AuthenticateMembershipCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePasswordCompleted As ChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPasswordCompleted As SetPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUserCompleted As CreateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserCompleted As UpdateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event VersionCompleted As VersionCompletedEventHandler
        
        '''<remarks/>
        Public Event ManifestVersionCompleted As ManifestVersionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/DBRR", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DBRR(ByVal Value As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("DBRR", New Object() {Value})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DBRRAsync(ByVal Value As Boolean)
            Me.DBRRAsync(Value, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DBRRAsync(ByVal Value As Boolean, ByVal userState As Object)
            If (Me.DBRROperationCompleted Is Nothing) Then
                Me.DBRROperationCompleted = AddressOf Me.OnDBRROperationCompleted
            End If
            Me.InvokeAsync("DBRR", New Object() {Value}, Me.DBRROperationCompleted, userState)
        End Sub
        
        Private Sub OnDBRROperationCompleted(ByVal arg As Object)
            If (Not (Me.DBRRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DBRRCompleted(Me, New DBRRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/QueryDomainAliasNamesVT", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QueryDomainAliasNamesVT(ByVal Type As String) As String
            Dim results() As Object = Me.Invoke("QueryDomainAliasNamesVT", New Object() {Type})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QueryDomainAliasNamesVTAsync(ByVal Type As String)
            Me.QueryDomainAliasNamesVTAsync(Type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryDomainAliasNamesVTAsync(ByVal Type As String, ByVal userState As Object)
            If (Me.QueryDomainAliasNamesVTOperationCompleted Is Nothing) Then
                Me.QueryDomainAliasNamesVTOperationCompleted = AddressOf Me.OnQueryDomainAliasNamesVTOperationCompleted
            End If
            Me.InvokeAsync("QueryDomainAliasNamesVT", New Object() {Type}, Me.QueryDomainAliasNamesVTOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryDomainAliasNamesVTOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryDomainAliasNamesVTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryDomainAliasNamesVTCompleted(Me, New QueryDomainAliasNamesVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/QueryDomainAliasNames", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QueryDomainAliasNames() As String
            Dim results() As Object = Me.Invoke("QueryDomainAliasNames", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QueryDomainAliasNamesAsync()
            Me.QueryDomainAliasNamesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryDomainAliasNamesAsync(ByVal userState As Object)
            If (Me.QueryDomainAliasNamesOperationCompleted Is Nothing) Then
                Me.QueryDomainAliasNamesOperationCompleted = AddressOf Me.OnQueryDomainAliasNamesOperationCompleted
            End If
            Me.InvokeAsync("QueryDomainAliasNames", New Object(-1) {}, Me.QueryDomainAliasNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryDomainAliasNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryDomainAliasNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryDomainAliasNamesCompleted(Me, New QueryDomainAliasNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/GetDomainNameVT", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainNameVT(ByVal sAlias As String, ByVal Type As String) As String
            Dim results() As Object = Me.Invoke("GetDomainNameVT", New Object() {sAlias, Type})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainNameVTAsync(ByVal sAlias As String, ByVal Type As String)
            Me.GetDomainNameVTAsync(sAlias, Type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainNameVTAsync(ByVal sAlias As String, ByVal Type As String, ByVal userState As Object)
            If (Me.GetDomainNameVTOperationCompleted Is Nothing) Then
                Me.GetDomainNameVTOperationCompleted = AddressOf Me.OnGetDomainNameVTOperationCompleted
            End If
            Me.InvokeAsync("GetDomainNameVT", New Object() {sAlias, Type}, Me.GetDomainNameVTOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainNameVTOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainNameVTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainNameVTCompleted(Me, New GetDomainNameVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/GetDomainName", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainName(ByVal sAlias As String) As String
            Dim results() As Object = Me.Invoke("GetDomainName", New Object() {sAlias})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainNameAsync(ByVal sAlias As String)
            Me.GetDomainNameAsync(sAlias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainNameAsync(ByVal sAlias As String, ByVal userState As Object)
            If (Me.GetDomainNameOperationCompleted Is Nothing) Then
                Me.GetDomainNameOperationCompleted = AddressOf Me.OnGetDomainNameOperationCompleted
            End If
            Me.InvokeAsync("GetDomainName", New Object() {sAlias}, Me.GetDomainNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainNameCompleted(Me, New GetDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/GetDomainPathVT", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainPathVT(ByVal sAlias As String, ByVal Type As String) As String
            Dim results() As Object = Me.Invoke("GetDomainPathVT", New Object() {sAlias, Type})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainPathVTAsync(ByVal sAlias As String, ByVal Type As String)
            Me.GetDomainPathVTAsync(sAlias, Type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainPathVTAsync(ByVal sAlias As String, ByVal Type As String, ByVal userState As Object)
            If (Me.GetDomainPathVTOperationCompleted Is Nothing) Then
                Me.GetDomainPathVTOperationCompleted = AddressOf Me.OnGetDomainPathVTOperationCompleted
            End If
            Me.InvokeAsync("GetDomainPathVT", New Object() {sAlias, Type}, Me.GetDomainPathVTOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainPathVTOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainPathVTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainPathVTCompleted(Me, New GetDomainPathVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/GetDomainPath", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomainPath(ByVal sAlias As String) As String
            Dim results() As Object = Me.Invoke("GetDomainPath", New Object() {sAlias})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDomainPathAsync(ByVal sAlias As String)
            Me.GetDomainPathAsync(sAlias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDomainPathAsync(ByVal sAlias As String, ByVal userState As Object)
            If (Me.GetDomainPathOperationCompleted Is Nothing) Then
                Me.GetDomainPathOperationCompleted = AddressOf Me.OnGetDomainPathOperationCompleted
            End If
            Me.InvokeAsync("GetDomainPath", New Object() {sAlias}, Me.GetDomainPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDomainPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDomainPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDomainPathCompleted(Me, New GetDomainPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/VerifyConnection", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerifyConnection(ByVal xmlAliasList As String) As String
            Dim results() As Object = Me.Invoke("VerifyConnection", New Object() {xmlAliasList})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerifyConnectionAsync(ByVal xmlAliasList As String)
            Me.VerifyConnectionAsync(xmlAliasList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerifyConnectionAsync(ByVal xmlAliasList As String, ByVal userState As Object)
            If (Me.VerifyConnectionOperationCompleted Is Nothing) Then
                Me.VerifyConnectionOperationCompleted = AddressOf Me.OnVerifyConnectionOperationCompleted
            End If
            Me.InvokeAsync("VerifyConnection", New Object() {xmlAliasList}, Me.VerifyConnectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerifyConnectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerifyConnectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerifyConnectionCompleted(Me, New VerifyConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/Authenticate", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Authenticate(ByVal xmlAuthenticateRequest As String) As String
            Dim results() As Object = Me.Invoke("Authenticate", New Object() {xmlAuthenticateRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal xmlAuthenticateRequest As String)
            Me.AuthenticateAsync(xmlAuthenticateRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal xmlAuthenticateRequest As String, ByVal userState As Object)
            If (Me.AuthenticateOperationCompleted Is Nothing) Then
                Me.AuthenticateOperationCompleted = AddressOf Me.OnAuthenticateOperationCompleted
            End If
            Me.InvokeAsync("Authenticate", New Object() {xmlAuthenticateRequest}, Me.AuthenticateOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateCompleted(Me, New AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/Search", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Search(ByVal XMLSearchRequest As String) As String
            Dim results() As Object = Me.Invoke("Search", New Object() {XMLSearchRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal XMLSearchRequest As String)
            Me.SearchAsync(XMLSearchRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal XMLSearchRequest As String, ByVal userState As Object)
            If (Me.SearchOperationCompleted Is Nothing) Then
                Me.SearchOperationCompleted = AddressOf Me.OnSearchOperationCompleted
            End If
            Me.InvokeAsync("Search", New Object() {XMLSearchRequest}, Me.SearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchCompleted(Me, New SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/QueryGroupList", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QueryGroupList(ByVal sXMLRequest As String) As String
            Dim results() As Object = Me.Invoke("QueryGroupList", New Object() {sXMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QueryGroupListAsync(ByVal sXMLRequest As String)
            Me.QueryGroupListAsync(sXMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryGroupListAsync(ByVal sXMLRequest As String, ByVal userState As Object)
            If (Me.QueryGroupListOperationCompleted Is Nothing) Then
                Me.QueryGroupListOperationCompleted = AddressOf Me.OnQueryGroupListOperationCompleted
            End If
            Me.InvokeAsync("QueryGroupList", New Object() {sXMLRequest}, Me.QueryGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryGroupListCompleted(Me, New QueryGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/DirectoryUpdate", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DirectoryUpdate(ByVal DirectoryContract As String) As String
            Dim results() As Object = Me.Invoke("DirectoryUpdate", New Object() {DirectoryContract})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DirectoryUpdateAsync(ByVal DirectoryContract As String)
            Me.DirectoryUpdateAsync(DirectoryContract, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DirectoryUpdateAsync(ByVal DirectoryContract As String, ByVal userState As Object)
            If (Me.DirectoryUpdateOperationCompleted Is Nothing) Then
                Me.DirectoryUpdateOperationCompleted = AddressOf Me.OnDirectoryUpdateOperationCompleted
            End If
            Me.InvokeAsync("DirectoryUpdate", New Object() {DirectoryContract}, Me.DirectoryUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnDirectoryUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.DirectoryUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DirectoryUpdateCompleted(Me, New DirectoryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/AuthenticateMembership", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthenticateMembership(ByVal XMLRequest As String) As String
            Dim results() As Object = Me.Invoke("AuthenticateMembership", New Object() {XMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateMembershipAsync(ByVal XMLRequest As String)
            Me.AuthenticateMembershipAsync(XMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateMembershipAsync(ByVal XMLRequest As String, ByVal userState As Object)
            If (Me.AuthenticateMembershipOperationCompleted Is Nothing) Then
                Me.AuthenticateMembershipOperationCompleted = AddressOf Me.OnAuthenticateMembershipOperationCompleted
            End If
            Me.InvokeAsync("AuthenticateMembership", New Object() {XMLRequest}, Me.AuthenticateMembershipOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateMembershipOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateMembershipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateMembershipCompleted(Me, New AuthenticateMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/ChangePassword", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePassword(ByVal XMLRequest As String) As String
            Dim results() As Object = Me.Invoke("ChangePassword", New Object() {XMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal XMLRequest As String)
            Me.ChangePasswordAsync(XMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal XMLRequest As String, ByVal userState As Object)
            If (Me.ChangePasswordOperationCompleted Is Nothing) Then
                Me.ChangePasswordOperationCompleted = AddressOf Me.OnChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangePassword", New Object() {XMLRequest}, Me.ChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePasswordCompleted(Me, New ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/SetPassword", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPassword(ByVal XMLRequest As String) As String
            Dim results() As Object = Me.Invoke("SetPassword", New Object() {XMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPasswordAsync(ByVal XMLRequest As String)
            Me.SetPasswordAsync(XMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPasswordAsync(ByVal XMLRequest As String, ByVal userState As Object)
            If (Me.SetPasswordOperationCompleted Is Nothing) Then
                Me.SetPasswordOperationCompleted = AddressOf Me.OnSetPasswordOperationCompleted
            End If
            Me.InvokeAsync("SetPassword", New Object() {XMLRequest}, Me.SetPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPasswordCompleted(Me, New SetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/CreateUser", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUser(ByVal XMLRequest As String) As String
            Dim results() As Object = Me.Invoke("CreateUser", New Object() {XMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUserAsync(ByVal XMLRequest As String)
            Me.CreateUserAsync(XMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUserAsync(ByVal XMLRequest As String, ByVal userState As Object)
            If (Me.CreateUserOperationCompleted Is Nothing) Then
                Me.CreateUserOperationCompleted = AddressOf Me.OnCreateUserOperationCompleted
            End If
            Me.InvokeAsync("CreateUser", New Object() {XMLRequest}, Me.CreateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUserCompleted(Me, New CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/UpdateUser", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUser(ByVal XMLRequest As String) As String
            Dim results() As Object = Me.Invoke("UpdateUser", New Object() {XMLRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal XMLRequest As String)
            Me.UpdateUserAsync(XMLRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal XMLRequest As String, ByVal userState As Object)
            If (Me.UpdateUserOperationCompleted Is Nothing) Then
                Me.UpdateUserOperationCompleted = AddressOf Me.OnUpdateUserOperationCompleted
            End If
            Me.InvokeAsync("UpdateUser", New Object() {XMLRequest}, Me.UpdateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserCompleted(Me, New UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/Version", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Version() As String
            Dim results() As Object = Me.Invoke("Version", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VersionAsync()
            Me.VersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VersionAsync(ByVal userState As Object)
            If (Me.VersionOperationCompleted Is Nothing) Then
                Me.VersionOperationCompleted = AddressOf Me.OnVersionOperationCompleted
            End If
            Me.InvokeAsync("Version", New Object(-1) {}, Me.VersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VersionCompleted(Me, New VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Crawco.com/CDS/ManifestVersion", RequestNamespace:="http://Crawco.com/CDS/", ResponseNamespace:="http://Crawco.com/CDS/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ManifestVersion() As String
            Dim results() As Object = Me.Invoke("ManifestVersion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ManifestVersionAsync()
            Me.ManifestVersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ManifestVersionAsync(ByVal userState As Object)
            If (Me.ManifestVersionOperationCompleted Is Nothing) Then
                Me.ManifestVersionOperationCompleted = AddressOf Me.OnManifestVersionOperationCompleted
            End If
            Me.InvokeAsync("ManifestVersion", New Object(-1) {}, Me.ManifestVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnManifestVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ManifestVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ManifestVersionCompleted(Me, New ManifestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Crawco.com/CDS/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://Crawco.com/CDS/", IsNullable:=false)>  _
    Partial Public Class AuthHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private domainField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Domain() As String
            Get
                Return Me.domainField
            End Get
            Set
                Me.domainField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DBRRCompletedEventHandler(ByVal sender As Object, ByVal e As DBRRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DBRRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub QueryDomainAliasNamesVTCompletedEventHandler(ByVal sender As Object, ByVal e As QueryDomainAliasNamesVTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QueryDomainAliasNamesVTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub QueryDomainAliasNamesCompletedEventHandler(ByVal sender As Object, ByVal e As QueryDomainAliasNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QueryDomainAliasNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainNameVTCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainNameVTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainNameVTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainPathVTCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainPathVTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainPathVTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GetDomainPathCompletedEventHandler(ByVal sender As Object, ByVal e As GetDomainPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDomainPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VerifyConnectionCompletedEventHandler(ByVal sender As Object, ByVal e As VerifyConnectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerifyConnectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AuthenticateCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SearchCompletedEventHandler(ByVal sender As Object, ByVal e As SearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub QueryGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As QueryGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QueryGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub DirectoryUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As DirectoryUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DirectoryUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AuthenticateMembershipCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateMembershipCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateMembershipCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub SetPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As SetPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreateUserCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub UpdateUserCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VersionCompletedEventHandler(ByVal sender As Object, ByVal e As VersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ManifestVersionCompletedEventHandler(ByVal sender As Object, ByVal e As ManifestVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ManifestVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
